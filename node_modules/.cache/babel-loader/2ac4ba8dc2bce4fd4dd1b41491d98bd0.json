{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/TrybeTunes/src/components/MusicCard.jsx\";\nimport React, { Component } from 'react';\nimport { shape, func, arrayOf } from 'prop-types';\nimport './MusicCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends Component {\n  constructor(props) {\n    super(props);\n    this.onCheckChange = this.onCheckChange.bind(this);\n    this.state = {\n      favorite: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      allFavoriteSongs,\n      song: {\n        trackId\n      }\n    } = this.props;\n    const favorite = allFavoriteSongs.some(favoriteSong => favoriteSong.trackId === trackId);\n    this.setState({\n      favorite\n    });\n  }\n\n  onCheckChange(_ref, song) {\n    let {\n      target: {\n        checked\n      }\n    } = _ref;\n    const {\n      updateFavoriteSongs\n    } = this.props;\n    const action = checked ? 'add' : 'remove';\n    updateFavoriteSongs(song, action);\n  }\n\n  render() {\n    const {\n      favorite\n    } = this.state;\n    const {\n      song\n    } = this.props;\n    const {\n      trackId,\n      trackName,\n      previewUrl,\n      collectionName,\n      artworkUrl100\n    } = song;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"song-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: artworkUrl100,\n        alt: trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"song-name\",\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"song-collection\",\n          children: collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        \"data-testid\": \"audio-component\",\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: previewUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \"O seu navegador n\\xE3o suporta o elemento\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: trackId,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          checked: favorite,\n          \"data-testid\": `checkbox-music-${trackId}`,\n          id: trackId,\n          onChange: event => this.onCheckChange(event, song),\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \"Favorita\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.defaultProps = {\n  allFavoriteSongs: [{}]\n};\nMusicCard.propTypes = {\n  song: shape({}).isRequired,\n  allFavoriteSongs: arrayOf(shape({})),\n  updateFavoriteSongs: func.isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/Users/brenoaraujo/projects-to-github/TrybeTunes/src/components/MusicCard.jsx"],"names":["React","Component","shape","func","arrayOf","MusicCard","constructor","props","onCheckChange","bind","state","favorite","componentDidMount","allFavoriteSongs","song","trackId","some","favoriteSong","setState","target","checked","updateFavoriteSongs","action","render","trackName","previewUrl","collectionName","artworkUrl100","event","defaultProps","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { shape, func, arrayOf } from 'prop-types';\n\nimport './MusicCard.css';\n\nclass MusicCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onCheckChange = this.onCheckChange.bind(this);\n\n    this.state = {\n      favorite: false,\n    };\n  }\n\n  componentDidMount() {\n    const { allFavoriteSongs, song: { trackId } } = this.props;\n\n    const favorite = allFavoriteSongs\n      .some((favoriteSong) => favoriteSong.trackId === trackId);\n\n    this.setState({ favorite });\n  }\n\n  onCheckChange({ target: { checked } }, song) {\n    const { updateFavoriteSongs } = this.props;\n\n    const action = checked ? 'add' : 'remove';\n    updateFavoriteSongs(song, action);\n  }\n\n  render() {\n    const { favorite } = this.state;\n    const { song } = this.props;\n    const { trackId, trackName, previewUrl, collectionName, artworkUrl100 } = song;\n\n    return (\n      <li className=\"song-container\">\n        <img src={ artworkUrl100 } alt={ trackName } />\n        <div className=\"song-info\">\n          <h2 className=\"song-name\">{ trackName }</h2>\n          <p className=\"song-collection\">{ collectionName }</p>\n        </div>\n\n        <audio\n          controls\n          data-testid=\"audio-component\"\n        >\n          <source src={ previewUrl } />\n          <track kind=\"captions\" />\n          O seu navegador n√£o suporta o elemento\n          {' '}\n          <code>audio</code>\n        </audio>\n\n        <label htmlFor={ trackId }>\n          <input\n            checked={ favorite }\n            data-testid={ `checkbox-music-${trackId}` }\n            id={ trackId }\n            onChange={ (event) => this.onCheckChange(event, song) }\n            type=\"checkbox\"\n          />\n          Favorita\n        </label>\n      </li>\n    );\n  }\n}\n\nMusicCard.defaultProps = {\n  allFavoriteSongs: [{}],\n};\n\nMusicCard.propTypes = {\n  song: shape({}).isRequired,\n  allFavoriteSongs: arrayOf(shape({})),\n  updateFavoriteSongs: func.isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}