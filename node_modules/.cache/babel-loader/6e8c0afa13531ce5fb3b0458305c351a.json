{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/TrybeTunes/src/pages/Favorites.jsx\";\nimport React, { Component } from 'react';\nimport { removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport '../css/Favorites.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n    this.updateFavoriteSongs = this.updateFavoriteSongs.bind(this);\n    this.removeFavoriteSong = this.removeFavoriteSong.bind(this);\n    this.state = {\n      allFavoriteSongs: [],\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateFavoriteSongs();\n  }\n\n  updateFavoriteSongs() {\n    this.setState({\n      loading: true\n    }, () => getFavoriteSongs().then(favorites => {\n      this.setState({\n        allFavoriteSongs: favorites || [],\n        loading: false\n      });\n    }));\n  }\n\n  removeFavoriteSong(song) {\n    this.setState({\n      loading: true\n    }, () => removeSong(song).then(() => {\n      getFavoriteSongs().then(favorites => {\n        this.setState({\n          allFavoriteSongs: favorites || [],\n          loading: false\n        });\n      });\n    }));\n  }\n\n  render() {\n    const {\n      loading,\n      allFavoriteSongs\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-favorites\",\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        favorites: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"favorite-title\",\n        children: \"Minhas favoritas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"favorite-songs\",\n        children: !loading && allFavoriteSongs.map(song => /*#__PURE__*/_jsxDEV(MusicCard, {\n          allFavoriteSongs: allFavoriteSongs,\n          song: song,\n          updateFavoriteSongs: this.removeFavoriteSong\n        }, song.trackId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["/Users/brenoaraujo/projects-to-github/TrybeTunes/src/pages/Favorites.jsx"],"names":["React","Component","removeSong","getFavoriteSongs","Header","MusicCard","Favorites","constructor","updateFavoriteSongs","bind","removeFavoriteSong","state","allFavoriteSongs","loading","componentDidMount","setState","then","favorites","song","render","map","trackId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,8BAA7C;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAO,sBAAP;;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AAEA,SAAKE,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,EADP;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,mBAAL;AACD;;AAEDA,EAAAA,mBAAmB,GAAG;AACpB,SAAKO,QAAL,CACE;AAAEF,MAAAA,OAAO,EAAE;AAAX,KADF,EAEE,MAAMV,gBAAgB,GACnBa,IADG,CACGC,SAAD,IAAe;AACnB,WAAKF,QAAL,CAAc;AAAEH,QAAAA,gBAAgB,EAAEK,SAAS,IAAI,EAAjC;AAAqCJ,QAAAA,OAAO,EAAE;AAA9C,OAAd;AACD,KAHG,CAFR;AAOD;;AAEDH,EAAAA,kBAAkB,CAACQ,IAAD,EAAO;AACvB,SAAKH,QAAL,CACE;AAAEF,MAAAA,OAAO,EAAE;AAAX,KADF,EAEE,MAAMX,UAAU,CAACgB,IAAD,CAAV,CAAiBF,IAAjB,CAAsB,MAAM;AAChCb,MAAAA,gBAAgB,GAAGa,IAAnB,CAAyBC,SAAD,IAAe;AACrC,aAAKF,QAAL,CAAc;AAAEH,UAAAA,gBAAgB,EAAEK,SAAS,IAAI,EAAjC;AAAqCJ,UAAAA,OAAO,EAAE;AAA9C,SAAd;AACD,OAFD;AAGD,KAJK,CAFR;AAQD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,OAAF;AAAWD,MAAAA;AAAX,QAAgC,KAAKD,KAA3C;AAEA,wBACE;AAAK,qBAAY,gBAAjB;AAAkC,MAAA,SAAS,EAAC,MAA5C;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAIIE,OAAO,iBAAI;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJf,eAME;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBACI,CAACA,OAAD,IAAYD,gBAAgB,CAC3BQ,GADW,CACNF,IAAD,iBACH,QAAC,SAAD;AAEE,UAAA,gBAAgB,EAAGN,gBAFrB;AAGE,UAAA,IAAI,EAAGM,IAHT;AAIE,UAAA,mBAAmB,EAAG,KAAKR;AAJ7B,WACQQ,IAAI,CAACG,OADb;AAAA;AAAA;AAAA;AAAA,gBAFU;AADhB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AA7D+B;;AAgElC,eAAef,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\n\nimport '../css/Favorites.css';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.updateFavoriteSongs = this.updateFavoriteSongs.bind(this);\n    this.removeFavoriteSong = this.removeFavoriteSong.bind(this);\n\n    this.state = {\n      allFavoriteSongs: [],\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.updateFavoriteSongs();\n  }\n\n  updateFavoriteSongs() {\n    this.setState(\n      { loading: true },\n      () => getFavoriteSongs()\n        .then((favorites) => {\n          this.setState({ allFavoriteSongs: favorites || [], loading: false });\n        }),\n    );\n  }\n\n  removeFavoriteSong(song) {\n    this.setState(\n      { loading: true },\n      () => removeSong(song).then(() => {\n        getFavoriteSongs().then((favorites) => {\n          this.setState({ allFavoriteSongs: favorites || [], loading: false });\n        });\n      }),\n    );\n  }\n\n  render() {\n    const { loading, allFavoriteSongs } = this.state;\n\n    return (\n      <div data-testid=\"page-favorites\" className=\"page\">\n        <Header favorites=\"active\" />\n        <h1 className=\"favorite-title\">Minhas favoritas</h1>\n\n        { loading && <p className=\"loading\">Carregando...</p> }\n\n        <ul className=\"favorite-songs\">\n          { !loading && allFavoriteSongs\n            .map((song) => (\n              <MusicCard\n                key={ song.trackId }\n                allFavoriteSongs={ allFavoriteSongs }\n                song={ song }\n                updateFavoriteSongs={ this.removeFavoriteSong }\n              />\n            )) }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n"]},"metadata":{},"sourceType":"module"}